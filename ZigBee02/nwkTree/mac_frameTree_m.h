//
// Generated file, do not edit! Created by nedtool 5.0 from nwkTree/mac_frameTree.msg.
//

#ifndef __MAC_FRAMETREE_M_H
#define __MAC_FRAMETREE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>nwkTree/mac_frameTree.msg:16</tt> by nedtool.
 * <pre>
 * packet macFrameTree
 * {
 *     int counter;
 *     int numFrames;
 *     int framesLeft;
 *     int gateNumber;
 * }
 * </pre>
 */
class macFrameTree : public ::omnetpp::cPacket
{
  protected:
    int counter;
    int numFrames;
    int framesLeft;
    int gateNumber;

  private:
    void copy(const macFrameTree& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const macFrameTree&);

  public:
    macFrameTree(const char *name=nullptr, int kind=0);
    macFrameTree(const macFrameTree& other);
    virtual ~macFrameTree();
    macFrameTree& operator=(const macFrameTree& other);
    virtual macFrameTree *dup() const {return new macFrameTree(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual int getCounter() const;
    virtual void setCounter(int counter);
    virtual int getNumFrames() const;
    virtual void setNumFrames(int numFrames);
    virtual int getFramesLeft() const;
    virtual void setFramesLeft(int framesLeft);
    virtual int getGateNumber() const;
    virtual void setGateNumber(int gateNumber);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const macFrameTree& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, macFrameTree& obj) {obj.parsimUnpack(b);}


#endif // ifndef __MAC_FRAMETREE_M_H

