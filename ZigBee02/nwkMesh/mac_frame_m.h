//
// Generated file, do not edit! Created by nedtool 5.0 from mac_frame.msg.
//

#ifndef __MAC_FRAME_M_H
#define __MAC_FRAME_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>mac_frame.msg:16</tt> by nedtool.
 * <pre>
 * packet macFrame
 * {
 *     int counter;
 *     int numFrames;
 *     int framesLeft;
 *     int gateNumber;
 *     bool broadcast;
 * }
 * </pre>
 */
class macFrame : public ::omnetpp::cPacket
{
  protected:
    int counter;
    int numFrames;
    int framesLeft;
    int gateNumber;
    bool broadcast;

  private:
    void copy(const macFrame& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const macFrame&);

  public:
    macFrame(const char *name=nullptr, int kind=0);
    macFrame(const macFrame& other);
    virtual ~macFrame();
    macFrame& operator=(const macFrame& other);
    virtual macFrame *dup() const {return new macFrame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual int getCounter() const;
    virtual void setCounter(int counter);
    virtual int getNumFrames() const;
    virtual void setNumFrames(int numFrames);
    virtual int getFramesLeft() const;
    virtual void setFramesLeft(int framesLeft);
    virtual int getGateNumber() const;
    virtual void setGateNumber(int gateNumber);
    virtual bool getBroadcast() const;
    virtual void setBroadcast(bool broadcast);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const macFrame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, macFrame& obj) {obj.parsimUnpack(b);}


#endif // ifndef __MAC_FRAME_M_H

